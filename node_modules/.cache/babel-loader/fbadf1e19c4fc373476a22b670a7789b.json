{"ast":null,"code":"var _jsxFileName = \"/home/renato/Documents/Universidade/3ano/IHC/ihc_project/src/pages/Filter_device.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport mockData from \"./Models\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Filter_device extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countryList: [],\n      stateList: [],\n      cityList: [],\n      selectedCountry: \"\",\n      selectedState: \"\",\n      selectedCity: \"\"\n    };\n    this.changeCountry = this.changeCountry.bind(this);\n    this.changeState = this.changeState.bind(this);\n    this.changeCity = this.changeCity.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      data\n    } = mockData; // Get all countries from data object which exists as keys\n    // and set to the countrylist state\n\n    const countryList = Object.keys(data);\n    this.setState({\n      countryList\n    });\n  }\n\n  changeCountry(e) {\n    // Based on country selection change options for state dropdown\n    // and show it in result as well\n    const {\n      data\n    } = mockData;\n    const selectedCountry = e && e.target && e.target.value;\n\n    if (selectedCountry) {\n      const stateList = Object.keys(data[selectedCountry].states);\n      this.setState({\n        stateList,\n        selectedCountry,\n        cityList: []\n      });\n    } else {\n      this.setState({\n        stateList: [],\n        cityList: [],\n        selectedCountry: \"\",\n        selectedState: \"\",\n        selectedCity: \"\"\n      });\n    }\n  }\n\n  changeState(e) {\n    // Based on state selection change options for city dropdown\n    // and show it in result as well\n    const {\n      data\n    } = mockData;\n    const selectedState = e && e.target && e.target.value;\n\n    if (selectedState) {\n      const cityList = data[this.state.selectedCountry].states[selectedState].cities;\n      this.setState({\n        cityList,\n        selectedState\n      });\n    } else {\n      this.setState({\n        cityList: [],\n        selectedState: \"\",\n        selectedCity: \"\"\n      });\n    }\n  }\n\n  changeCity(e) {\n    // Based on city selection show it in result as well\n    const selectedCity = e && e.target && e.target.value;\n    this.setState({\n      selectedCity\n    });\n  }\n\n  function() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Filter_device\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dynamic Select dropdown - ReactJS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dynamic-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.state.selectedCountry,\n          onChange: this.changeCountry,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Please select Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), this.state.countryList.map((x, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: x\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.state.selectedState,\n          onChange: this.changeState,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Please select State/Province\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), this.state.stateList.map((x, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: x\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.state.selectedCity,\n          onChange: this.changeCity,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Please select City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), this.state.cityList.map((x, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: x\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dynamic-dropdown-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Selected Result:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), this.state.selectedCountry, this.state.selectedState ? ` | ${this.state.selectedState}` : ``, this.state.selectedCity ? ` | ${this.state.selectedCity}` : ``]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(Filter_device, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 125,\n  columnNumber: 17\n}, this), rootElement);","map":{"version":3,"names":["React","ReactDOM","mockData","Filter_device","Component","constructor","props","state","countryList","stateList","cityList","selectedCountry","selectedState","selectedCity","changeCountry","bind","changeState","changeCity","componentDidMount","data","Object","keys","setState","e","target","value","states","cities","function","map","x","i","rootElement","document","getElementById","render"],"sources":["/home/renato/Documents/Universidade/3ano/IHC/ihc_project/src/pages/Filter_device.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport mockData from \"./Models\";\n\n\nclass Filter_device extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countryList: [],\n      stateList: [],\n      cityList: [],\n      selectedCountry: \"\",\n      selectedState: \"\",\n      selectedCity: \"\"\n    };\n\n    this.changeCountry = this.changeCountry.bind(this);\n    this.changeState = this.changeState.bind(this);\n    this.changeCity = this.changeCity.bind(this);\n  }\n  componentDidMount() {\n    const { data } = mockData;\n    // Get all countries from data object which exists as keys\n    // and set to the countrylist state\n    const countryList = Object.keys(data);\n    this.setState({\n      countryList\n    });\n  }\n\n  changeCountry(e) {\n    // Based on country selection change options for state dropdown\n    // and show it in result as well\n    const { data } = mockData;\n    const selectedCountry = e && e.target && e.target.value;\n    if (selectedCountry) {\n      const stateList = Object.keys(data[selectedCountry].states);\n      this.setState({\n        stateList,\n        selectedCountry,\n        cityList: []\n      });\n    } else {\n      this.setState({\n        stateList: [],\n        cityList: [],\n        selectedCountry: \"\",\n        selectedState: \"\",\n        selectedCity: \"\"\n      });\n    }\n  }\n\n  changeState(e) {\n    // Based on state selection change options for city dropdown\n    // and show it in result as well\n    const { data } = mockData;\n    const selectedState = e && e.target && e.target.value;\n    if (selectedState) {\n      const cityList =\n        data[this.state.selectedCountry].states[selectedState].cities;\n      this.setState({\n        cityList,\n        selectedState\n      });\n    } else {\n      this.setState({\n        cityList: [],\n        selectedState: \"\",\n        selectedCity: \"\"\n      });\n    }\n  }\n\n  changeCity(e) {\n    // Based on city selection show it in result as well\n    const selectedCity = e && e.target && e.target.value;\n    this.setState({\n      selectedCity\n    });\n  }\n\n  function () {\n    return (\n      <div className=\"Filter_device\">\n        <h1>Dynamic Select dropdown - ReactJS</h1>\n        <div className=\"dynamic-dropdown\">\n          <select\n            value={this.state.selectedCountry}\n            onChange={this.changeCountry}\n          >\n            <option value=\"\">Please select Country</option>\n            {this.state.countryList.map((x, i) => {\n              return <option key={i}>{x}</option>;\n            })}\n          </select>\n          <br />\n          <select value={this.state.selectedState} onChange={this.changeState}>\n            <option value=\"\">Please select State/Province</option>\n            {this.state.stateList.map((x, i) => {\n              return <option key={i}>{x}</option>;\n            })}\n          </select>\n          <br />\n          <select value={this.state.selectedCity} onChange={this.changeCity}>\n            <option value=\"\">Please select City</option>\n            {this.state.cityList.map((x, i) => {\n              return <option key={i}>{x}</option>;\n            })}\n          </select>\n        </div>\n        <div className=\"dynamic-dropdown-result\">\n          <h3>Selected Result:</h3>\n          {this.state.selectedCountry}\n          {this.state.selectedState ? ` | ${this.state.selectedState}` : ``}\n          {this.state.selectedCity ? ` | ${this.state.selectedCity}` : ``}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Filter_device />, rootElement);\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}